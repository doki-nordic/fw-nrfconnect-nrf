

Methods of publishing scancode-toolkit-cache.json:
==================================================
1. Publish as a github action atifact:
   - our script must use Github API to download latest artifact
2. Publish to the same server as documentation.
   - if using existsting method, it can be published at:
     https://developer.nordicsemi.com/nRF_Connect_SDK_dev/doc/west-sbom/scancode-toolkit-cache.json
   - if file cannot be in the "doc" directory, modification of monitor scripts are required
3. Publish as a commit in master branch
   - it will create a commit once a day
4. As a commit in seperate repository:
   - what/where repository?
SITE NOTE:
   Database can contain timestamp when it was created and when update has been checked last time.
   The script will check for updates when, e.g.: creation_time > 25h AND last_check_time > 24h
   (assuming that database is created once a day)

Planned CI use cases:
=====================
* Create and publish scancode-toolkit-cache.json.
* Check if all files contained in the PR have valid SPDX tag.
* Run check for entire NCS if there is no regression regarding licenses.
* Any more?

To do:
======
1. ncs/nrf/samples/bluetooth/peripheral_lbs$ west sbom -d build/ --license-detectors spdx-tag
	Exception. file: ```input_build.py line 100
   Exception: "ar -t "build/modules/nrf/drivers/hw_cc310/lib..__nrf__drivers__hw_cc310.a"" command exited with error code 9
2. Case insensitive spdx license id.
3. Add -n parameter [mj]
4. Add relative west top dir as path in database (helper function in common.py) [mj]
5. Improve database detector [mj]
6. Rename scancode-cache to cache [mj]
7. Display warning when list of input files is empty 
8. Use west logger 
9. Add own exception
10. Add exception handling for scancode-toolkit (common.py)
