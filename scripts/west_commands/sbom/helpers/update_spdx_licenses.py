#
# Copyright (c) 2019 Nordic Semiconductor ASA
#
# SPDX-License-Identifier: LicenseRef-Nordic-5-Clause


# Use this script to update ../data/spdx-licenses.yaml file with newest SPDX license list.


import json
import yaml
import urllib.request
from pathlib import Path
from types import SimpleNamespace

url = 'https://raw.githubusercontent.com/spdx/license-list-data/master/json/licenses.json'


print(f'Starting download from {url}')
response = urllib.request.urlopen(url)
print('Downloading...')
binary = response.read()
print(f'Downloaded {len(binary)} bytes')
text = binary.decode('utf-8')
data = json.loads(text, object_hook=lambda d: SimpleNamespace(**d))
print(f'Number of licenses: {len(data.licenses)}')
print(f'License list version: {data.licenseListVersion}')

output = Path(__file__).parent / '../data/spdx-licenses.yaml'

try:
    with open(output, 'r') as fd:
        old = yaml.safe_load(fd)
    update = old['_version'] != data.licenseListVersion
    print(f'Old version: {old["_version"]}')
except:
    print('Cannot read old version')
    update = True

if update:
    print('Updating')
    with open(output, 'w') as fd:
        fd.write(f'# Autogenerated from: {url}\n')
        fd.write(f'_version: "{data.licenseListVersion}"\n')
        for license in data.licenses:
            fd.write(f'{license.licenseId}:\n')
            fd.write(f'  name: "{license.name}"\n')
            if license.reference != f'https://spdx.org/licenses/{license.licenseId}.html':
                fd.write(f'  url: "{license.reference}"\n')
else:
    print('No need to update')

print('DONE')
